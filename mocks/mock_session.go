// Code generated by MockGen. DO NOT EDIT.
// Source: session/session_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSessionServiceInterface is a mock of SessionServiceInterface interface
type MockSessionServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionServiceInterfaceMockRecorder
}

// MockSessionServiceInterfaceMockRecorder is the mock recorder for MockSessionServiceInterface
type MockSessionServiceInterfaceMockRecorder struct {
	mock *MockSessionServiceInterface
}

// NewMockSessionServiceInterface creates a new mock instance
func NewMockSessionServiceInterface(ctrl *gomock.Controller) *MockSessionServiceInterface {
	mock := &MockSessionServiceInterface{ctrl: ctrl}
	mock.recorder = &MockSessionServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSessionServiceInterface) EXPECT() *MockSessionServiceInterfaceMockRecorder {
	return m.recorder
}

// SetCurrentUser mocks base method
func (m *MockSessionServiceInterface) SetCurrentUser(ctx *gin.Context, userId uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCurrentUser", ctx, userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCurrentUser indicates an expected call of SetCurrentUser
func (mr *MockSessionServiceInterfaceMockRecorder) SetCurrentUser(ctx, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCurrentUser", reflect.TypeOf((*MockSessionServiceInterface)(nil).SetCurrentUser), ctx, userId)
}

// GetCurrentUserId mocks base method
func (m *MockSessionServiceInterface) GetCurrentUserId(ctx *gin.Context) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentUserId", ctx)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentUserId indicates an expected call of GetCurrentUserId
func (mr *MockSessionServiceInterfaceMockRecorder) GetCurrentUserId(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentUserId", reflect.TypeOf((*MockSessionServiceInterface)(nil).GetCurrentUserId), ctx)
}
